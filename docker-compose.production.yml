services:
  nginx:
    image: nginx:alpine
    container_name: mymcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  app:
    build: .
    container_name: mymcp-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=onpardev_mymcp;Username=postgres;Password=${POSTGRES_PASSWORD}
      - Clerk__SecretKey=${CLERK_SECRET_KEY}
      - Clerk__PublishableKey=${CLERK_PUBLISHABLE_KEY}
      - Clerk__Authority=${CLERK_AUTHORITY}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:16-alpine
    container_name: mymcp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: onpardev_mymcp
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:10-alpine
    container_name: mymcp-flyway
    command: >
      -url=jdbc:postgresql://postgres:5432/onpardev_mymcp
      -user=postgres
      -password=${POSTGRES_PASSWORD}
      -connectRetries=60
      migrate
    volumes:
      - ./db/migrations:/flyway/sql:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:

networks:
  default:
    name: mymcp-network
