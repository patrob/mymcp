name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'infrastructure/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  contents: read

jobs:
  deploy-infrastructure:
    name: Deploy to Digital Ocean
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          if [ "${{ github.event.inputs.action }}" = "destroy" ]; then
            terraform plan -destroy -out=tfplan
          else
            terraform plan -out=tfplan
          fi

      - name: Terraform Apply
        env:
          TF_VAR_digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve tfplan

      - name: Get outputs
        id: outputs
        run: |
          echo "droplet_ip=$(terraform output -raw droplet_ip)" >> $GITHUB_OUTPUT
          echo "ssh_connection=$(terraform output -raw ssh_connection)" >> $GITHUB_OUTPUT

      - name: Save infrastructure info
        if: github.event.inputs.action != 'destroy'
        run: |
          echo "Infrastructure deployed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "Droplet IP: ${{ steps.outputs.outputs.droplet_ip }}" >> $GITHUB_STEP_SUMMARY
          echo "SSH: ${{ steps.outputs.outputs.ssh_connection }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Next steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Wait for cloud-init to complete (~5 minutes)" >> $GITHUB_STEP_SUMMARY
          echo "2. Deploy the application using the 'Deploy Application' workflow" >> $GITHUB_STEP_SUMMARY