name: PR Validation

on:
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '22'

jobs:
  frontend-unit-test:
    name: Frontend Unit Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Frontend Unit Tests & Lint
      uses: ./.github/actions/frontend-unit-test
      with:
        node-version: ${{ env.NODE_VERSION }}
        dotnet-version: ${{ env.DOTNET_VERSION }}
        coverage: 'true'
      env:
        CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
        CLERK_AUTHORITY: ${{ secrets.CLERK_AUTHORITY }}

  frontend-e2e-test:
    name: Frontend E2E Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Frontend E2E Tests
      uses: ./.github/actions/frontend-e2e-test
      with:
        node-version: ${{ env.NODE_VERSION }}
        dotnet-version: ${{ env.DOTNET_VERSION }}
      env:
        CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
        CLERK_AUTHORITY: ${{ secrets.CLERK_AUTHORITY }}

  backend-unit-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('Directory.Packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
    
    - name: Run unit tests with coverage
      run: dotnet test OnParDev.MyMcp.Api.UnitTests --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults/ --collect:"XPlat Code Coverage" --settings coverlet.runsettings
    
    - name: Upload unit test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: TestResults/
        
    - name: Upload unit test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-coverage
        path: OnParDev.MyMcp.Api.UnitTests/TestResults/Coverage/

  backend-integration-tests:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: onpardev_mymcp_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('Directory.Packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
    
    - name: Run integration tests with coverage
      run: dotnet test OnParDev.MyMcp.Api.IntegrationTests --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults/ --collect:"XPlat Code Coverage" --settings coverlet.runsettings
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=onpardev_mymcp_test;Username=postgres;Password=postgres"
        CLERK__PUBLISHABLEKEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
        CLERK__AUTHORITY: ${{ secrets.CLERK_AUTHORITY }}
    
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: TestResults/
        
    - name: Upload integration test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-coverage
        path: OnParDev.MyMcp.Api.IntegrationTests/TestResults/Coverage/

  backend-build:
    name: Backend Build & Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('Directory.Packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution (Release)
      run: dotnet build --no-restore --configuration Release
    
    - name: Check for build warnings
      run: |
        dotnet build --no-restore --configuration Release --verbosity normal | tee build.log
        # Look for actual warning messages (not summary counts)
        # Exclude known generator warnings that don't affect functionality
        if grep -E "(warning [A-Z]{2}[0-9]{4}|: warning)" build.log | grep -v "Generator.*failed to initialize" | grep -v "CS8785"; then
          echo "Found build warnings:"
          grep -E "(warning [A-Z]{2}[0-9]{4}|: warning)" build.log | grep -v "Generator.*failed to initialize" | grep -v "CS8785"
          exit 1
        fi
        echo "No build warnings found."

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET (for API generation)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './OnParDev.MyMcp.Api/ClientApp/package-lock.json'
    
    - name: Install .NET dependencies
      run: dotnet restore
    
    - name: Start API for OpenAPI generation
      run: |
        dotnet build --configuration Release
        nohup dotnet run --project OnParDev.MyMcp.Api --configuration Release &
        sleep 30
      env:
        CLERK__PUBLISHABLEKEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
        CLERK__AUTHORITY: ${{ secrets.CLERK_AUTHORITY }}
    
    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./OnParDev.MyMcp.Api/ClientApp
    
    - name: Generate API client
      run: npm run generate-api
      working-directory: ./OnParDev.MyMcp.Api/ClientApp
    
    - name: Build frontend
      run: npm run build
      working-directory: ./OnParDev.MyMcp.Api/ClientApp
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./OnParDev.MyMcp.Api/ClientApp/dist/


